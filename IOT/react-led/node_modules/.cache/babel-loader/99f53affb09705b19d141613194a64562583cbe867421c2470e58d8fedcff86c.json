{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Yolo\\\\react-led\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport './App.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [buttonColor, setButtonColor] = useState('green');\n  const [ledState, setLedState] = useState('on'); // Initial state is 'on'\n  const [visiblePanels, setVisiblePanels] = useState([]);\n  const handleMarkerClick = index => {\n    setVisiblePanels(prevVisiblePanels => {\n      if (prevVisiblePanels.includes(index)) {\n        // Si le panneau est déjà visible, le supprimer\n        return prevVisiblePanels.filter(item => item !== index);\n      } else {\n        // Sinon, ajouter le panneau\n        return [...prevVisiblePanels, index];\n      }\n    });\n  };\n  const handleClick = async () => {\n    try {\n      // Toggle the LED state\n      const newLedState = ledState === 'on' ? 'off' : 'on';\n\n      // Make a POST request using Axios\n      const response = await axios.get(`http://localhost:3000/led/${newLedState}`);\n\n      // Check if the request was successful (status code 2xx)\n      if (response.status === 200) {\n        console.log(`LED turned ${newLedState}`); // Utiliser les backticks ici\n        setLedState(newLedState); // Update the LED state\n        setButtonColor(newLedState === 'on' ? 'red' : 'green'); // Update button color\n      } else {\n        console.error(`Failed to turn ${newLedState} LED:`, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  const MyMap = () => {\n    const center = [33.2433, -8.4988]; // Coordinates for the initial center of the map\n    const zoom = 13; // Initial zoom level\n    const AlmorabitinCoords1 = [33.244646, -8.494815];\n    const AlmorabitinCoords2 = [33.244219, -8.494961];\n    const customIcon1 = new L.Icon({\n      iconUrl: 'fr.png',\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41]\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center,\n        zoom: zoom,\n        style: {\n          height: '1000px',\n          width: '1000px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: AlmorabitinCoords1,\n          icon: customIcon1,\n          interactive: true,\n          eventHandlers: {\n            click: () => handleMarkerClick(0)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            autoPan: false,\n            children: [\"Almorabitin FeuRouge 1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: AlmorabitinCoords2,\n          icon: customIcon1,\n          interactive: true,\n          eventHandlers: {\n            click: () => handleMarkerClick(1)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            autoPan: false,\n            children: [\"Almorabitin FeuRouge 2\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n  const Panel = ({\n    onClick\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ledState === 'on' ? 'led-on.gif' : 'led-off.png',\n        alt: \"LED\",\n        className: \"centered-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: buttonColor\n        },\n        className: \"centered-button\",\n        onClick: handleClick,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Map de FeuRouge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(MyMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), visiblePanels.map(index => /*#__PURE__*/_jsxDEV(Panel, {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sOFlhv4SeVxfyBK4TzwH91qNm74=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","App","_s","buttonColor","setButtonColor","ledState","setLedState","visiblePanels","setVisiblePanels","handleMarkerClick","index","prevVisiblePanels","includes","filter","item","handleClick","newLedState","response","get","status","console","log","error","statusText","message","MyMap","center","zoom","AlmorabitinCoords1","AlmorabitinCoords2","customIcon1","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","className","children","style","height","width","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","icon","interactive","eventHandlers","click","autoPan","Panel","onClick","src","alt","backgroundColor","map","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Yolo/react-led/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport './App.css'; // Assuming you have a CSS file for styling\n\nconst App = () => {\n  const [buttonColor, setButtonColor] = useState('green');\n  const [ledState, setLedState] = useState('on'); // Initial state is 'on'\n  const [visiblePanels, setVisiblePanels] = useState([]);\n\n    const handleMarkerClick = (index) => {\n      setVisiblePanels((prevVisiblePanels) => {\n        if (prevVisiblePanels.includes(index)) {\n          // Si le panneau est déjà visible, le supprimer\n          return prevVisiblePanels.filter((item) => item !== index);\n        } else {\n          // Sinon, ajouter le panneau\n          return [...prevVisiblePanels, index];\n        }\n      });\n    };\n\n    const handleClick = async () => {\n      try {\n        // Toggle the LED state\n        const newLedState = ledState === 'on' ? 'off' : 'on';\n    \n        // Make a POST request using Axios\n        const response = await axios.get(`http://localhost:3000/led/${newLedState}`);\n    \n        // Check if the request was successful (status code 2xx)\n        if (response.status === 200) {\n          console.log(`LED turned ${newLedState}`); // Utiliser les backticks ici\n          setLedState(newLedState); // Update the LED state\n          setButtonColor(newLedState === 'on' ? 'red' : 'green'); // Update button color\n        } else {\n          console.error(`Failed to turn ${newLedState} LED:`, response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n\n\n  const MyMap = () => {\n    const center = [33.2433, -8.4988]; // Coordinates for the initial center of the map\n    const zoom = 13; // Initial zoom level\n    const AlmorabitinCoords1 = [33.244646, -8.494815];\n    const AlmorabitinCoords2 = [33.244219, -8.494961];\n    \n  \n\n    const customIcon1 = new L.Icon({\n      iconUrl: 'fr.png',\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41],\n      \n    });\n\n\n    return  (\n      <div className=\"map-container\">\n        {/* MapContainer est utilisé pour afficher la carte */}\n        <MapContainer center={center} zoom={zoom} style={{ height: '1000px', width: '1000px' }}>\n          {/* TileLayer est utilisé pour afficher les tuiles de la carte */}\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n  \n          {/* Marqueur pour le carrefour Almorabitin */}\n          <Marker position={AlmorabitinCoords1} icon={customIcon1} interactive={true} eventHandlers={{ click: () => handleMarkerClick(0) }}>\n          <Popup autoPan={false}>\n            Almorabitin FeuRouge 1<br/>\n          </Popup>\n        </Marker>\n\n        <Marker position={AlmorabitinCoords2} icon={customIcon1} interactive={true} eventHandlers={{ click: () => handleMarkerClick(1) }}>\n          <Popup autoPan={false}>\n            Almorabitin FeuRouge 2<br />\n          </Popup>\n        </Marker>\n\n        </MapContainer>\n              \n       \n      </div>\n    );\n  };\n  \n  const Panel = ({ onClick }) => {\n    return (\n      <div className=\"panel\">\n        <img\n          src={ledState === 'on' ? 'led-on.gif' : 'led-off.png'}\n          alt=\"LED\"\n          className=\"centered-image\"\n        />\n        <button\n          style={{ backgroundColor: buttonColor }}\n          className=\"centered-button\"\n          onClick={handleClick}\n        >\n          Click me\n        </button>\n      </div>\n    );\n  };\n  \n\n  return (\n    <div className=\"app-container\" >\n          <h1>Map de FeuRouge</h1>\n          <MyMap/>\n          {visiblePanels.map((index) => (\n      <Panel key={index}  />\n  ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}